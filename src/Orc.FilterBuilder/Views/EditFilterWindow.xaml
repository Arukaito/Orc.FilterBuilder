<catel:DataWindow x:Class="Orc.FilterBuilder.Views.EditFilterWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:net40="clr-namespace:Orc.FilterBuilder"
                  xmlns:converters="clr-namespace:Orc.FilterBuilder.Converters"
                  xmlns:catel="http://catel.codeplex.com"
                  xmlns:markup="clr-namespace:Orc.FilterBuilder.Markup"
                  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                  xmlns:interactivity="clr-namespace:Orc.FilterBuilder.Interactivity"
                  SizeToContent="Manual" ResizeMode="CanResizeWithGrip">

    <Window.Resources>
        <converters:ConditionTreeItemConverter x:Key="ConditionTreeItemConverter" />
        <BooleanToVisibilityConverter x:Key="VisibilityConverter"/>
        <converters:ValueControlTypeVisibilityConverter x:Key="ValueControlTypeVisibilityConverter"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <TextBlock Grid.Column="0" Text="Name:" />
        <TextBox Grid.Column="1" Text="{Binding FilterSchemeTitle, NotifyOnValidationError=True, ValidatesOnDataErrors=True}">
            <i:Interaction.Behaviors>
                <catel:UpdateBindingOnTextChanged UpdateDelay="0" />
            </i:Interaction.Behaviors>
        </TextBox>

        <TreeView Grid.Row="1" Grid.ColumnSpan="2" BorderThickness="1" ItemsSource="{Binding FilterScheme.ConditionItems}">
            <TreeView.Resources>
                <Style TargetType="Button">
                    <Setter Property="Height" Value="24" />
                    <Setter Property="Width" Value="24" />
                    <Setter Property="Margin" Value="4,6,4,6" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>

                <Style TargetType="ComboBox">
                    <Setter Property="Width" Value="120" />
                    <Setter Property="Margin" Value="4,6,4,6" />
                </Style>

                <Style TargetType="DatePicker">
                    <Setter Property="Width" Value="120" />
                    <Setter Property="Margin" Value="4,6,4,6" />
                    <Setter Property="Height" Value="25" />
                </Style>

                <Style TargetType="TextBox">
                    <Setter Property="Width" Value="120" />
                    <Setter Property="MinWidth" Value="120" />
                    <Setter Property="Margin" Value="4,6,4,6" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>

                <Style TargetType="Image" x:Key="ImageIcon">
                    <Setter Property="Width" Value="16"/>
                    <Setter Property="Height" Value="16"/>
                </Style>
            </TreeView.Resources>

            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsExpanded" Value="True" />
                </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Items}">
                    <Grid>
                        <StackPanel Orientation="Horizontal" Margin="0,3,0,0"
                                    Visibility="{Binding Converter={StaticResource ConditionTreeItemConverter}, ConverterParameter=Group}">
                            <ComboBox ItemsSource="{markup:EnumBinding {x:Type net40:ConditionGroupType}}" SelectedItem="{Binding Type}" />

                            <Button ToolTip="Add expression" Command="{Binding DataContext.AddExpressionCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}" CommandParameter="{Binding}">
                                <Image Source="/Orc.FilterBuilder;component/Resources/Images/add_expression.png" Style="{StaticResource ImageIcon}"/>
                            </Button>

                            <Button ToolTip="Add group" Command="{Binding DataContext.AddGroupCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}" CommandParameter="{Binding}">
                                <Image Source="/Orc.FilterBuilder;component/Resources/Images/add_group.png" Style="{StaticResource ImageIcon}"/>
                            </Button>

                            <Button ToolTip="Delete item" Command="{Binding DataContext.DeleteConditionItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}" CommandParameter="{Binding}">
                                <Image Source="/Orc.FilterBuilder;component/Resources/Images/delete.png" Style="{StaticResource ImageIcon}"/>
                            </Button>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,3,0,0"
                                    Visibility="{Binding Converter={StaticResource ConditionTreeItemConverter}, ConverterParameter=Expression}">
                            <ComboBox ItemsSource="{Binding DataContext.InstanceProperties, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"
                                      DisplayMemberPath="DisplayName" SelectedItem="{Binding Property}" />

                            <ComboBox ItemsSource="{Binding DataTypeExpression, Converter={converters:DataTypeExpressionToConditionsConverter}}"
                                      SelectedItem="{Binding DataTypeExpression.SelectedCondition}" />

                            <Grid Visibility="{Binding DataTypeExpression.IsValueRequired, Converter={StaticResource VisibilityConverter}}"
                                  Margin="3,0,0,0">
                                <TextBox Text="{Binding DataTypeExpression.Value}"
                                         Visibility="{Binding DataTypeExpression.ValueControlType, Converter={StaticResource ValueControlTypeVisibilityConverter}, ConverterParameter={x:Static net40:ValueControlType.Text}}">
                                    <i:Interaction.Behaviors>
                                        <catel:UpdateBindingOnTextChanged UpdateDelay="500" />
                                        <interactivity:AutoCompletion PropertyName="{Binding Property.Name, Mode=OneWay}" 
                                                              ItemsSource="{Binding DataContext.RawCollection, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}" 
                                                              MetadataProvider="{Binding DataContext.MetadataProvider, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"
                                                              IsEnabled="{Binding DataContext.EnableAutoCompletion, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"/>
                                    </i:Interaction.Behaviors>
                                </TextBox>

                                <DatePicker SelectedDate="{Binding DataTypeExpression.Value}"
                                            Visibility="{Binding DataTypeExpression.ValueControlType, Converter={StaticResource ValueControlTypeVisibilityConverter}, ConverterParameter={x:Static net40:ValueControlType.DateTime}}"/>

                                <ComboBox ItemsSource="{Binding DataTypeExpression.BooleanValues}"
                                          SelectedValue="{Binding DataTypeExpression.Value}"
                                          Visibility="{Binding DataTypeExpression.ValueControlType, Converter={StaticResource ValueControlTypeVisibilityConverter}, ConverterParameter={x:Static net40:ValueControlType.Boolean}}"/>

                                <StackPanel Orientation="Horizontal" Visibility="{Binding DataTypeExpression.ValueControlType, Converter={StaticResource ValueControlTypeVisibilityConverter}, ConverterParameter={x:Static net40:ValueControlType.TimeSpan}}">
                                    <ComboBox ItemsSource="{Binding DataTypeExpression.SpanTypes}" SelectedValue="{Binding DataTypeExpression.SelectedSpanType}" />
                                    <TextBox Text="{Binding DataTypeExpression.Amount}" />
                                </StackPanel>
                            </Grid>

                            <Button ToolTip="Delete item" Command="{Binding DataContext.DeleteConditionItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}" CommandParameter="{Binding}">
                                <Image Source="/Orc.FilterBuilder;component/Resources/Images/delete.png" Style="{StaticResource ImageIcon}"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <CheckBox Grid.Row="2" Grid.ColumnSpan="2" IsChecked="{Binding EnableLivePreview}" Content="Enable live preview"
                  Visibility="{Binding AllowLivePreview, Converter={catel:BooleanToCollapsingVisibilityConverter}}" Margin="10" />

        <ScrollViewer x:Name="previewPlaceholder" Grid.Row="3" Grid.ColumnSpan="2" Margin="10" 
                      Visibility="{Binding AllowLivePreview, Converter={catel:BooleanToCollapsingVisibilityConverter}}"
                      VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <DataGrid x:Name="dataGrid"  AutoGenerateColumns="False" ItemsSource="{Binding PreviewItems}" />
        </ScrollViewer>

        
    </Grid>
</catel:DataWindow>
